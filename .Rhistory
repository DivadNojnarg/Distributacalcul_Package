alpha = 0.7
)
ggplot(data = data.frame(q = c(1, 30)), aes(x=q)) +
stat_function(fun = pgammaMixture,
args = list(shape = shapes, rate = rates)) +
ylab("f(x)") +
theme_classic() +
stat_function(
fun = pgammaMixture,
args = list(shape = shapes, rate = rates),
xlim = c(0, 15),
geom = "area",
fill = "red",
alpha = 0.7
)
shapes <- c(30, 4)
rates <- c(40, 1/20)
ggplot(data = data.frame(x = c(1, 30)), aes(x)) +
stat_function(fun = dgammaMixture,
args = list(shape = shapes, rate = rates)) +
ylab("f(x)") +
theme_classic() +
stat_function(
fun = dgammaMixture,
args = list(shape = shapes, rate = rates),
xlim = c(0, 15),
geom = "area",
fill = "red",
alpha = 0.7
)
rates <- c(40, 20)
ggplot(data = data.frame(x = c(1, 30)), aes(x)) +
stat_function(fun = dgammaMixture,
args = list(shape = shapes, rate = rates)) +
ylab("f(x)") +
theme_classic() +
stat_function(
fun = dgammaMixture,
args = list(shape = shapes, rate = rates),
xlim = c(0, 15),
geom = "area",
fill = "red",
alpha = 0.7
)
rates <- c(40, 120)
ggplot(data = data.frame(x = c(1, 30)), aes(x)) +
stat_function(fun = dgammaMixture,
args = list(shape = shapes, rate = rates)) +
ylab("f(x)") +
theme_classic() +
stat_function(
fun = dgammaMixture,
args = list(shape = shapes, rate = rates),
xlim = c(0, 15),
geom = "area",
fill = "red",
alpha = 0.7
)
shapes <- c(30, 49)
rates <- c(40, 120)
rates <- c(40, 120)
ggplot(data = data.frame(x = c(1, 30)), aes(x)) +
stat_function(fun = dgammaMixture,
args = list(shape = shapes, rate = rates)) +
ylab("f(x)") +
theme_classic() +
stat_function(
fun = dgammaMixture,
args = list(shape = shapes, rate = rates),
xlim = c(0, 15),
geom = "area",
fill = "red",
alpha = 0.7
)
shapes <- c(3
, 10)
shapes <- c(3, 10)
rates <- c(40, 120)
ggplot(data = data.frame(x = c(1, 30)), aes(x)) +
stat_function(fun = dgammaMixture,
args = list(shape = shapes, rate = rates)) +
ylab("f(x)") +
theme_classic() +
stat_function(
fun = dgammaMixture,
args = list(shape = shapes, rate = rates),
xlim = c(0, 15),
geom = "area",
fill = "red",
alpha = 0.7
)
shapes <- c(300, 10)
rates <- c(40, 120)
ggplot(data = data.frame(x = c(1, 30)), aes(x)) +
stat_function(fun = dgammaMixture,
args = list(shape = shapes, rate = rates)) +
ylab("f(x)") +
theme_classic() +
stat_function(
fun = dgammaMixture,
args = list(shape = shapes, rate = rates),
xlim = c(0, 15),
geom = "area",
fill = "red",
alpha = 0.7
)
shapes <- c(300, 1)
rates <- c(40, 120)
ggplot(data = data.frame(x = c(1, 30)), aes(x)) +
stat_function(fun = dgammaMixture,
args = list(shape = shapes, rate = rates)) +
ylab("f(x)") +
theme_classic() +
stat_function(
fun = dgammaMixture,
args = list(shape = shapes, rate = rates),
xlim = c(0, 15),
geom = "area",
fill = "red",
alpha = 0.7
)
shapes <- c(300, 1e2)
rates <- c(40, 120)
ggplot(data = data.frame(x = c(1, 30)), aes(x)) +
stat_function(fun = dgammaMixture,
args = list(shape = shapes, rate = rates)) +
ylab("f(x)") +
theme_classic() +
stat_function(
fun = dgammaMixture,
args = list(shape = shapes, rate = rates),
xlim = c(0, 15),
geom = "area",
fill = "red",
alpha = 0.7
)
shapes <- c(300, 1e3)
rates <- c(40, 120)
ggplot(data = data.frame(x = c(1, 30)), aes(x)) +
stat_function(fun = dgammaMixture,
args = list(shape = shapes, rate = rates)) +
ylab("f(x)") +
theme_classic() +
stat_function(
fun = dgammaMixture,
args = list(shape = shapes, rate = rates),
xlim = c(0, 15),
geom = "area",
fill = "red",
alpha = 0.7
)
shapes <- c(300, 250)
rates <- c(40, 120)
ggplot(data = data.frame(x = c(1, 30)), aes(x)) +
stat_function(fun = dgammaMixture,
args = list(shape = shapes, rate = rates)) +
ylab("f(x)") +
theme_classic() +
stat_function(
fun = dgammaMixture,
args = list(shape = shapes, rate = rates),
xlim = c(0, 15),
geom = "area",
fill = "red",
alpha = 0.7
)
rates <- c(4, 120)
ggplot(data = data.frame(x = c(1, 30)), aes(x)) +
stat_function(fun = dgammaMixture,
args = list(shape = shapes, rate = rates)) +
ylab("f(x)") +
theme_classic() +
stat_function(
fun = dgammaMixture,
args = list(shape = shapes, rate = rates),
xlim = c(0, 15),
geom = "area",
fill = "red",
alpha = 0.7
)
rates <- c(400, 120)
ggplot(data = data.frame(x = c(1, 30)), aes(x)) +
stat_function(fun = dgammaMixture,
args = list(shape = shapes, rate = rates)) +
ylab("f(x)") +
theme_classic() +
stat_function(
fun = dgammaMixture,
args = list(shape = shapes, rate = rates),
xlim = c(0, 15),
geom = "area",
fill = "red",
alpha = 0.7
)
rates <- c(300, 120)
ggplot(data = data.frame(x = c(1, 30)), aes(x)) +
stat_function(fun = dgammaMixture,
args = list(shape = shapes, rate = rates)) +
ylab("f(x)") +
theme_classic() +
stat_function(
fun = dgammaMixture,
args = list(shape = shapes, rate = rates),
xlim = c(0, 15),
geom = "area",
fill = "red",
alpha = 0.7
)
rates <- c(100, 120)
ggplot(data = data.frame(x = c(1, 30)), aes(x)) +
stat_function(fun = dgammaMixture,
args = list(shape = shapes, rate = rates)) +
ylab("f(x)") +
theme_classic() +
stat_function(
fun = dgammaMixture,
args = list(shape = shapes, rate = rates),
xlim = c(0, 15),
geom = "area",
fill = "red",
alpha = 0.7
)
rates <- c(100, 500)
ggplot(data = data.frame(x = c(1, 30)), aes(x)) +
stat_function(fun = dgammaMixture,
args = list(shape = shapes, rate = rates)) +
ylab("f(x)") +
theme_classic() +
stat_function(
fun = dgammaMixture,
args = list(shape = shapes, rate = rates),
xlim = c(0, 15),
geom = "area",
fill = "red",
alpha = 0.7
)
rates <- c(30, 500)
ggplot(data = data.frame(x = c(1, 30)), aes(x)) +
stat_function(fun = dgammaMixture,
args = list(shape = shapes, rate = rates)) +
ylab("f(x)") +
theme_classic() +
stat_function(
fun = dgammaMixture,
args = list(shape = shapes, rate = rates),
xlim = c(0, 15),
geom = "area",
fill = "red",
alpha = 0.7
)
rates <- c(30, 1e9)
ggplot(data = data.frame(x = c(1, 30)), aes(x)) +
stat_function(fun = dgammaMixture,
args = list(shape = shapes, rate = rates)) +
ylab("f(x)") +
theme_classic() +
stat_function(
fun = dgammaMixture,
args = list(shape = shapes, rate = rates),
xlim = c(0, 15),
geom = "area",
fill = "red",
alpha = 0.7
)
#' @family Gamma mixture
#'
#' @examples
#' pgammaMixture(q = 15, shape = c(3, 5), rate = c(1/7, 1/4))
#' pgammaMixture(q = 15, shape = c(3, 5), scale = c(7, 4))
#' pgammaMixture(q = 15, shape = c(3, 5), rate = c(1/7, 1/4), lower.tail = FALSE)
#'
#' dgammaMixture(x = 15, shape = c(3, 5), scale = c(7, 4))
#'
#'
dgammaMixture <- function(x, shape, rate = 1 / scale, scale = 1 / rate, TOL = 1E-6) {
stopifnot(length(rate) == 2,
length(rate) == length(shape),
shape > 0
)
param_min <- c(shape[which.min(rate)], min(rate))
param_max <- c(shape[-which.min(rate)], rate[-min(rate)])
upper <- qnbinom(TOL, param_min[1], param_min[2]/param_max[2], lower.tail = FALSE)
fs <- rep(0, length(x))
for (i in 0:upper) {
fs <- fs + dnbinom(
x = i,
size = param_min[1],
prob = param_min[2] / param_max[2]
) * pgamma(
x = x,
shape = i + param_min[1] + param_max[1],
rate = param_max[2]
)
}
return(fs)
}
pgammaMixture <- function(q, shape, rate = 1 / scale, scale = 1 / rate, TOL = 1E-6, lower.tail = TRUE) {
stopifnot(length(rate) == 2,
length(rate) == length(shape),
shape > 0)
param_min <- c(shape[which.min(rate)], min(rate))
param_max <- c(shape[-which.min(rate)], rate[-min(rate)])
upper <- qnbinom(TOL, param_min[1], param_min[2]/param_max[2], lower.tail = FALSE)
Fs <- rep(0, length(x))
for (i in 0:upper) {
Fs <- Fs + dnbinom(
x = i,
size = param_min[1],
prob = param_min[2] / param_max[2]
) * pgamma(
q = q,
shape = i + param_min[1] + param_max[1],
rate = param_max[2]
)
}
if (lower.tail) {
return(Fs)
} else {
return(1 - Fs)
}
}
library(ggplot2)
library(ggplot2)
shapes <- c(300, 250)
rates <- c(30, 500)
ggplot(data = data.frame(x = c(1, 30)), aes(x)) +
stat_function(fun = dgammaMixture,
args = list(shape = shapes, rate = rates)) +
ylab("f(x)") +
theme_classic() +
stat_function(
fun = dgammaMixture,
args = list(shape = shapes, rate = rates),
xlim = c(0, 15),
geom = "area",
fill = "red",
alpha = 0.7
)
upper=2
rep(0, upper)
for (i in 0:upper) {
fs <- fs + dnbinom(
x = i,
size = param_min[1],
prob = param_min[2] / param_max[2]
) * dgamma(
x = x,
shape = i + param_min[1] + param_max[1],
scale = param_max[2]
)
}
return(fs)
#' @family Gamma mixture
#'
#' @examples
#' pgammaMixture(q = 15, shape = c(3, 5), rate = c(1/7, 1/4))
#' pgammaMixture(q = 15, shape = c(3, 5), scale = c(7, 4))
#' pgammaMixture(q = 15, shape = c(3, 5), rate = c(1/7, 1/4), lower.tail = FALSE)
#'
#' dgammaMixture(x = 15, shape = c(3, 5), scale = c(7, 4))
#'
#'
dgammaMixture <- function(x, shape, rate = 1 / scale, scale = 1 / rate, TOL = 1E-6) {
stopifnot(length(rate) == 2,
length(rate) == length(shape),
shape > 0
)
param_min <- c(shape[which.min(rate)], min(rate))
param_max <- c(shape[-which.min(rate)], rate[-min(rate)])
upper <- qnbinom(TOL, param_min[1], param_min[2]/param_max[2], lower.tail = FALSE)
fs <- rep(0, length(x))
for (i in 0:upper) {
fs <- fs + dnbinom(
x = i,
size = param_min[1],
prob = param_min[2] / param_max[2]
) * dgamma(
x = x,
shape = i + param_min[1] + param_max[1],
scale = param_max[2]
)
}
return(fs)
}
pgammaMixture <- function(q, shape, rate = 1 / scale, scale = 1 / rate, TOL = 1E-6, lower.tail = TRUE) {
stopifnot(length(rate) == 2,
length(rate) == length(shape),
shape > 0)
param_min <- c(shape[which.min(rate)], min(rate))
param_max <- c(shape[-which.min(rate)], rate[-min(rate)])
upper <- qnbinom(TOL, param_min[1], param_min[2]/param_max[2], lower.tail = FALSE)
Fs <- rep(0, length(x))
for (i in 0:upper) {
Fs <- Fs + dnbinom(
x = i,
size = param_min[1],
prob = param_min[2] / param_max[2]
) * pgamma(
q = q,
shape = i + param_min[1] + param_max[1],
rate = param_max[2]
)
}
if (lower.tail) {
return(Fs)
} else {
return(1 - Fs)
}
}
library(ggplot2)
shapes <- c(300, 250)
rates <- c(30, 500)
ggplot(data = data.frame(x = c(1, 30)), aes(x)) +
stat_function(fun = dgammaMixture,
args = list(shape = shapes, rate = rates)) +
ylab("f(x)") +
theme_classic() +
stat_function(
fun = dgammaMixture,
args = list(shape = shapes, rate = rates),
xlim = c(0, 15),
geom = "area",
fill = "red",
alpha = 0.7
)
#' @family Gamma mixture
#'
#' @examples
#' pgammaMixture(q = 15, shape = c(3, 5), rate = c(1/7, 1/4))
#' pgammaMixture(q = 15, shape = c(3, 5), scale = c(7, 4))
#' pgammaMixture(q = 15, shape = c(3, 5), rate = c(1/7, 1/4), lower.tail = FALSE)
#'
#' dgammaMixture(x = 15, shape = c(3, 5), scale = c(7, 4))
#'
#'
dgammaMixture <- function(x, shape, rate = 1 / scale, scale = 1 / rate, TOL = 1E-6) {
stopifnot(length(rate) == 2,
length(rate) == length(shape),
shape > 0
)
param_min <- c(shape[which.min(rate)], min(rate))
param_max <- c(shape[-which.min(rate)], rate[-min(rate)])
upper <- qnbinom(TOL, param_min[1], param_min[2]/param_max[2], lower.tail = FALSE)
fs <- rep(0, length(x))
for (i in 0:upper) {
fs <- fs + dnbinom(
x = i,
size = param_min[1],
prob = param_min[2] / param_max[2]
) * dgamma(
x = x,
shape = i + param_min[1] + param_max[1],
rate = param_max[2]
)
}
return(fs)
}
pgammaMixture <- function(q, shape, rate = 1 / scale, scale = 1 / rate, TOL = 1E-6, lower.tail = TRUE) {
stopifnot(length(rate) == 2,
length(rate) == length(shape),
shape > 0)
param_min <- c(shape[which.min(rate)], min(rate))
param_max <- c(shape[-which.min(rate)], rate[-min(rate)])
upper <- qnbinom(TOL, param_min[1], param_min[2]/param_max[2], lower.tail = FALSE)
Fs <- rep(0, length(x))
for (i in 0:upper) {
Fs <- Fs + dnbinom(
x = i,
size = param_min[1],
prob = param_min[2] / param_max[2]
) * pgamma(
q = q,
shape = i + param_min[1] + param_max[1],
rate = param_max[2]
)
}
if (lower.tail) {
return(Fs)
} else {
return(1 - Fs)
}
}
library(ggplot2)
shapes <- c(300, 250)
rates <- c(30, 500)
ggplot(data = data.frame(x = c(1, 30)), aes(x)) +
stat_function(fun = dgammaMixture,
args = list(shape = shapes, rate = rates)) +
ylab("f(x)") +
theme_classic() +
stat_function(
fun = dgammaMixture,
args = list(shape = shapes, rate = rates),
xlim = c(0, 15),
geom = "area",
fill = "red",
alpha = 0.7
)
rates <- c(69, 500)
ggplot(data = data.frame(x = c(1, 30)), aes(x)) +
stat_function(fun = dgammaMixture,
args = list(shape = shapes, rate = rates)) +
ylab("f(x)") +
theme_classic() +
stat_function(
fun = dgammaMixture,
args = list(shape = shapes, rate = rates),
xlim = c(0, 15),
geom = "area",
fill = "red",
alpha = 0.7
)
